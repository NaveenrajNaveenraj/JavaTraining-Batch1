package cc;

import java.util.HashMap;
import java.util.Scanner;
import java.util.Map;

public class Demo {
	static HashMap<Integer, Studentdetailss> map = new HashMap<Integer, Studentdetailss>();
	static Scanner sc = new Scanner(System.in);

	public static void main(String[] args) {

		while (true) {
			Scanner sc = new Scanner(System.in);
			System.out.println("1,addstudent");
			System.out.println("2,search student");
			System.out.println("3,delete student");
			System.out.println("4,print all the studentdetails");
			System.out.println("5,exit");
			System.out.println(" Please enter the operation to perform");
			int ch = sc.nextInt();

			switch (ch) {
			case 1:
				Demo.addStud();
				break;
			case 2:
				Demo.searchstud();
				break;

			case 3:

				Demo.removestud();
				break;

			case 4:
				Demo.displayAll();
				break;
			case 5:
				System.out.println("Thank you for your use");
				System.exit(0);
				break;
			default:
				System.out.println("You have entered invalid number");
			}
		}

	}

	public static void addStud() {

		Studentdetailss student = new Studentdetailss();
		for (int i = 0; i < 5; i++) {
			System.out.println("Enter KEY:");
			int key = sc.nextInt();
			System.out.println("1. Enter Student ID: ");
			student.setId(sc.nextInt());
			System.out.println("2. Enter Student Name");
			student.setName(sc.next());
			System.out.println("3. Enter Student address");
			student.setAddress(sc.next());
			map.put(key, student);
			System.out.println(" student details added successfully");
		}

	}

	public static void searchstud() {

		int i = 0;
		if (5 != 0) {

			System.out.println("enter the student id you want to search ");
			int id = sc.nextInt();
			for (Map.Entry<Integer, Studentdetailss> eachvalue : map.entrySet()) {

				Studentdetailss str = eachvalue.getValue();
				if (str.id == id) {

					System.out.println(eachvalue.getKey() + "" + "ID : " + str.id + " Name : " + str.name
							+ " address : " + str.address);
					break;
				}

			}

		}

		else {
			System.out.println(" not found student information !");

		}
	}

	public static void removestud() {

		if (5 != 0) {

			System.out.println("enter the student id you want remove");
			int id1 = sc.nextInt();
			for (Map.Entry<Integer, Studentdetailss> eachvalue : map.entrySet()) {

				Studentdetailss str = eachvalue.getValue();
				if (str.id == id1) {
					map.remove(map.get(str));
					System.out.println(eachvalue.getKey() + "" + "ID : " + str.id + " Name : " + str.name
							+ " address : " + str.address);

					break;
				}
			}
		} else {
			System.out.println(" not found student information!");

		}
	}

	public static void displayAll() {
		for (Map.Entry<Integer, Studentdetailss> eachvalue : map.entrySet()) {
			System.out.println("Student id\t name\t address");

			Studentdetailss str = eachvalue.getValue();
			System.out.println(eachvalue.getKey() + "" + str.id + "" + str.name + "" + str.address);

		}
	}

}
package cc;

public class Studentdetailss {


	 int id;
	 String name;
	 String address;

	Studentdetailss() {

	}

	public Studentdetailss(int id, String name, String address) {
		this.id = id;
		this.name = name;
		this.address = address;

	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;

	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;

	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;

	}

}


